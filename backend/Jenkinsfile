pipeline {
    agent any

    stages {
        stage('Pull Code') {
            steps {
                checkout scm
            }
        }
        stage('Download dependency') {
            steps {
                sh 'cd backend && npm install'
            }
        }
        stage('Unit Testing') {
            steps {
                sh 'cd backend && npm run unit-test'
            }
        }
        stage('Unit Testing Report') {
            steps {
                sh 'cd backend && npm run unit-test-report'

            }
        }
        stage('Component Testing') {
            steps {
                sh 'cd backend && npm run component-test-report'
            }
        }
        stage('Component Testing Report') {
            steps {
                sh 'cd backend && npm run component-test-report'
               
            }
        

        }
        stage('Create Coverage Report') {
            steps {
                echo 'code coverage report'
                // sh ''
                clover(cloverReportDir: '/backend/coverage', cloverReportFileName: 'clover.xml',
                    healthyTarget: [methodCoverage: 70, conditionalCoverage: 80, statementCoverage: 80],
                    unhealthyTarget: [methodCoverage: 40, conditionalCoverage: 50, statementCoverage: 50],
                    failingTarget: [methodCoverage: 0, conditionalCoverage: 0, statementCoverage: 0]
                )
            }
        }
    }
}